package com.mx.pokemonapi.ws;


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import org.springframework.ws.context.MessageContext;
import org.springframework.ws.server.EndpointInterceptor;

import com.mx.pokemonapi.bd.BitacoraPokemonService;
import com.mx.pokemonapi.entity.BitacoraPokemonEntity;

import jakarta.servlet.http.HttpServletRequest;

import java.sql.Timestamp;
import java.util.Date;

@Component
public class WebServiceInterceptor implements EndpointInterceptor {
    private final HttpServletRequest httpServletRequest;
    private final BitacoraPokemonService bitacoraPokemonService;
    protected static Logger logger = LoggerFactory.getLogger(WebServiceInterceptor.class);

    public WebServiceInterceptor(HttpServletRequest httpServletRequest, BitacoraPokemonService bitacoraPokemonService) {
        this.httpServletRequest = httpServletRequest;
        this.bitacoraPokemonService = bitacoraPokemonService;
    }

    private String getClientIp() {
        String remoteAddr = "";
        if (httpServletRequest != null) {
            remoteAddr = httpServletRequest.getHeader("X-FORWARDED-FOR");
            if (remoteAddr == null || "".equals(remoteAddr)) {
                remoteAddr = httpServletRequest.getRemoteAddr();
            }
        }

        return remoteAddr;
    }

    @Override
    public boolean handleRequest(MessageContext messageContext, Object o) throws Exception {
        Date date = new Date();
        BitacoraPokemonEntity bitacoraPokemonEntity = new BitacoraPokemonEntity();
        bitacoraPokemonEntity.setMetodo(messageContext.getRequest().toString().split("}")[1]);
        bitacoraPokemonEntity.setIpOrigen(getClientIp());
        bitacoraPokemonEntity.setFecha(new Timestamp(date.getTime()));
        bitacoraPokemonService.insertRequest(bitacoraPokemonEntity);
        return true;
    }

   
}
